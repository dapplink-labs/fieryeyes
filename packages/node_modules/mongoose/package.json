{
  "_from": "mongoose",
  "_id": "mongoose@7.0.1",
  "_inBundle": false,
  "_integrity": "sha512-fxm2bPRG457Hb8RLwN8cMCokK8HNem/7g+qp5SrHC7Pt4Z4jqn1+/3cuc8W7uqehKDWEtpirggI7uw08x2ZIjQ==",
  "_location": "/mongoose",
  "_phantomChildren": {},
  "_requested": {
    "type": "tag",
    "registry": true,
    "raw": "mongoose",
    "name": "mongoose",
    "escapedName": "mongoose",
    "rawSpec": "",
    "saveSpec": null,
    "fetchSpec": "latest"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/mongoose/-/mongoose-7.0.1.tgz",
  "_shasum": "9afc737d10b3920c2c9b77ac5ac77fd6ff828d3d",
  "_spec": "mongoose",
  "_where": "/Users/bruce/savardao/nftApi",
  "author": {
    "name": "Guillermo Rauch",
    "email": "guillermo@learnboost.com"
  },
  "browser": "./dist/browser.umd.js",
  "bugs": {
    "url": "https://github.com/Automattic/mongoose/issues/new"
  },
  "bundleDependencies": false,
  "config": {
    "mongodbMemoryServer": {
      "disablePostinstall": true
    }
  },
  "dependencies": {
    "bson": "^5.0.1",
    "kareem": "2.5.1",
    "mongodb": "5.1.0",
    "mpath": "0.9.0",
    "mquery": "5.0.0",
    "ms": "2.1.3",
    "sift": "16.0.1"
  },
  "deprecated": false,
  "description": "Mongoose MongoDB ODM",
  "devDependencies": {
    "@babel/core": "7.21.0",
    "@babel/preset-env": "7.20.2",
    "@typescript-eslint/eslint-plugin": "5.54.0",
    "@typescript-eslint/parser": "5.54.0",
    "acquit": "1.3.0",
    "acquit-ignore": "0.2.1",
    "acquit-require": "0.1.1",
    "assert-browserify": "2.0.0",
    "axios": "1.1.3",
    "babel-loader": "8.2.5",
    "benchmark": "2.1.4",
    "broken-link-checker": "^0.7.8",
    "buffer": "^5.6.0",
    "cheerio": "1.0.0-rc.12",
    "crypto-browserify": "3.12.0",
    "dotenv": "16.0.3",
    "dox": "1.0.0",
    "eslint": "8.35.0",
    "eslint-plugin-mocha-no-only": "1.1.1",
    "express": "^4.18.1",
    "highlight.js": "11.7.0",
    "lodash.isequal": "4.5.0",
    "lodash.isequalwith": "4.4.0",
    "marked": "4.2.12",
    "mkdirp": "^2.1.3",
    "mocha": "10.2.0",
    "moment": "2.x",
    "mongodb-memory-server": "8.11.5",
    "ncp": "^2.0.0",
    "nyc": "15.1.0",
    "pug": "3.0.2",
    "q": "1.5.1",
    "sinon": "15.0.1",
    "stream-browserify": "3.0.0",
    "tsd": "0.25.0",
    "typescript": "4.9.5",
    "uuid": "9.0.0",
    "webpack": "5.75.0"
  },
  "directories": {
    "lib": "./lib/mongoose"
  },
  "engines": {
    "node": ">=14.0.0"
  },
  "funding": {
    "type": "opencollective",
    "url": "https://opencollective.com/mongoose"
  },
  "homepage": "https://mongoosejs.com",
  "keywords": [
    "mongodb",
    "document",
    "model",
    "schema",
    "database",
    "odm",
    "data",
    "datastore",
    "query",
    "nosql",
    "orm",
    "db"
  ],
  "license": "MIT",
  "main": "./index.js",
  "mocha": {
    "extension": [
      "test.js"
    ],
    "watch-files": [
      "test/**/*.js"
    ]
  },
  "name": "mongoose",
  "repository": {
    "type": "git",
    "url": "git://github.com/Automattic/mongoose.git"
  },
  "scripts": {
    "build-browser": "(rm ./dist/* || true) && node ./scripts/build-browser.js",
    "docs:check-links": "blc http://127.0.0.1:8089 -ro",
    "docs:checkout:5x": "git checkout 5.x",
    "docs:checkout:6x": "git checkout 6.x",
    "docs:checkout:gh-pages": "git checkout gh-pages",
    "docs:clean": "npm run docs:clean:stable",
    "docs:clean:5x": "rimraf index.html && rimraf -rf ./docs/5.x && rimraf -rf ./docs/source/_docs && rimraf -rf ./tmp",
    "docs:clean:6x": "rimraf index.html && rimraf -rf ./docs/6.x && rimraf -rf ./docs/source/_docs && rimraf -rf ./tmp",
    "docs:clean:stable": "rimraf index.html && rimraf -rf ./docs/*.html  && rimraf -rf ./docs/api && rimraf -rf ./docs/tutorials/*.html && rimraf -rf ./docs/typescript/*.html && rimraf -rf ./docs/*.html && rimraf -rf ./docs/source/_docs && rimraf -rf ./tmp",
    "docs:copy:tmp": "mkdirp ./tmp/docs/css && mkdirp ./tmp/docs/js && mkdirp ./tmp/docs/images && mkdirp ./tmp/docs/tutorials && mkdirp ./tmp/docs/typescript && ncp ./docs/css ./tmp/docs/css --filter=.css$ && ncp ./docs/js ./tmp/docs/js --filter=.js$ && ncp ./docs/images ./tmp/docs/images && ncp ./docs/tutorials ./tmp/docs/tutorials && ncp ./docs/typescript ./tmp/docs/typescript && cp index.html ./tmp && cp docs/*.html ./tmp/docs/",
    "docs:copy:tmp:5x": "rimraf ./docs/5.x && ncp ./tmp ./docs/5.x",
    "docs:copy:tmp:6x": "rimraf ./docs/6.x && ncp ./tmp ./docs/6.x",
    "docs:generate": "node ./scripts/website.js",
    "docs:generate:search": "node ./scripts/generateSearch.js",
    "docs:merge:5x": "git merge 5.x",
    "docs:merge:6x": "git merge 6.x",
    "docs:merge:stable": "git merge master",
    "docs:prepare:publish:5x": "npm run docs:checkout:5x && npm run docs:merge:5x && npm run docs:clean:stable && npm run docs:generate && npm run docs:copy:tmp && npm run docs:checkout:gh-pages && npm run docs:copy:tmp:5x",
    "docs:prepare:publish:6x": "npm run docs:checkout:6x && npm run docs:merge:6x && npm run docs:clean:stable && npm run docs:generate && npm run docs:copy:tmp && npm run docs:checkout:gh-pages && npm run docs:copy:tmp:6x",
    "docs:prepare:publish:stable": "npm run docs:checkout:gh-pages && npm run docs:merge:stable && npm run docs:clean:stable && npm run docs:generate && npm run docs:generate:search",
    "docs:test": "npm run docs:generate && npm run docs:generate:search",
    "docs:view": "node ./scripts/static.js",
    "lint": "eslint .",
    "lint-js": "eslint . --ext .js",
    "lint-ts": "eslint . --ext .ts",
    "mongo": "node ./tools/repl.js",
    "prepublishOnly": "npm run build-browser",
    "release": "git pull && git push origin master --tags && npm publish",
    "release-5x": "git pull origin 5.x && git push origin 5.x && git push origin 5.x --tags && npm publish --tag 5x",
    "release-6x": "git pull origin 6.x && git push origin 6.x && git push origin 6.x --tags && npm publish --tag legacy",
    "tdd": "mocha ./test/*.test.js --inspect --watch --recursive --watch-files ./**/*.{js,ts}",
    "test": "mocha --exit ./test/*.test.js",
    "test-coverage": "nyc --reporter=html --reporter=text npm test",
    "test-deno": "deno run --allow-env --allow-read --allow-net --allow-run --allow-sys --allow-write ./test/deno.js",
    "test-rs": "START_REPLICA_SET=1 mocha --timeout 30000 --exit ./test/*.test.js",
    "test-tsd": "node ./test/types/check-types-filename && tsd",
    "ts-benchmark": "cd ./benchmarks/typescript/simple && npm install && npm run benchmark | node ../../../scripts/tsc-diagnostics-check"
  },
  "tsd": {
    "directory": "test/types",
    "compilerOptions": {
      "esModuleInterop": false,
      "strict": true,
      "allowSyntheticDefaultImports": true,
      "strictPropertyInitialization": false,
      "noImplicitAny": false,
      "strictNullChecks": true,
      "module": "commonjs",
      "target": "ES2017"
    }
  },
  "types": "./types/index.d.ts",
  "version": "7.0.1"
}
